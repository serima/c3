version: 2

aliases:
  echo_versions: &echo_versions
    run: |
      echo "node $(node -v)"
      echo "npm v$(npm --version)"
      echo "$(google-chrome --version)"

  test_and_codecov: &test_and_codecov
    steps:
      - run: npm test
      - run: npm run codecov
      - store_artifacts:
          path: htdocs
          destination: htdocs

jobs:
  test_node8:
    docker:
      - image: circleci/node:8-browsers
    steps:
      - checkout
      - <<: *echo_versions
      - restore_cache:
          key: npm-3-{{ checksum "package.json" }}
      - run: npm install
      - save_cache:
          key: npm-3-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - <<: *test_and_covedov
      - run: npx status-back -s -c circleci/htdocs -r c3js/c3 "preview build succes!" "https://${CIRCLE_BUILD_NUM}-11496279-gh.circle-artifacts.com/0/htdocs/index.html"

  test_node10:
    docker:
      - image: circleci/node:10-browsers
    steps:
      - checkout
      - <<: *echo_versions
      - restore_cache:
          key: npm-3-{{ checksum "package.json" }}
      - run: npm install
      - save_cache:
          key: npm-3-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - <<: *test_and_covedov
      - run: npx status-back -s -c circleci/htdocs -r c3js/c3 "preview build succes!" "https://${CIRCLE_BUILD_NUM}-11496279-gh.circle-artifacts.com/0/htdocs/index.html"

  docs:
    docker:
      - image: circleci/ruby:2.4-node
        env:
          BUNDLE_PATH: vendor/bundle
    steps:
      - checkout

      - restore_cache:
          key: deps-bundle-{{ checksum "Gemfile.lock" }}
      - run: bundle install
      - save_cache:
          key: deps-bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - restore_cache:
          key: npm-3-{{ checksum "package.json" }}
      - run: npm install
      - save_cache:
          key: npm-3-{{ checksum "package.json" }}
          paths:
            - ./node_modules

      - run: npm run build
      - run: npm run copy-to-docs
      - run: npm run build:docs
      - store_artifacts:
          path: build
          destination: docs
workflows:
  version: 2
  test:
    jobs:
      - test_node8
      - test_node10
      - docs
